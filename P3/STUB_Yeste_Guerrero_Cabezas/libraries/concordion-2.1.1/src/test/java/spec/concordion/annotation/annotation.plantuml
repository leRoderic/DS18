@startuml

title __ANNOTATION's Class Diagram__\n

  package spec.concordion {
    package spec.concordion.annotation {
      class AnnotationFixture {
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.annotation {
      class BeforeAndAfterLoggingFixture {
          {static} - log : List<String>
          + logBeforeExample()
          + logAfterExample()
          + logBeforeSpecification()
          + logAfterExample()
          + log()
          {static} + getLog()
          + error()
          + ok()
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.annotation {
      class BeforeAndAfterLoggingWithListenerFixture {
          {static} - log : List<String>
          + logBeforeExample()
          + logAfterExample()
          + logBeforeSpecification()
          + logAfterSpecification()
          + log()
          {static} + getLog()
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.annotation {
      class BeforeAndAfterMethodHooksFixture {
          + getLog()
          + getListenerLog()
          + simulateRun()
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.annotation {
      class ConcordionOptionsFixture {
          - pegdownExtensions : int
          + translate()
          + withWikilinkAndAutolink()
          + parse()
          + parseAndReturnExceptionMessage()
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.annotation {
      class ConcordionResourcesFixture {
          + process()
          + process()
          + processExpectingException()
          + processSpec()
          - compile()
          - compile()
          - process()
          + getResources()
          + getLinkExists()
          + getScriptExists()
          + isCssIncluded()
          + isDefaultCssIncluded()
          + isCopied()
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.annotation {
      class ConcordionScopedFixture {
          - exampleScopedCounter : ScopedObjectHolder<AtomicInteger>
          - specScopedCounter : ScopedObjectHolder<AtomicInteger>
          - fieldCounter : int
          + getFieldCounter()
          + getSpecScopedCounter()
          + getExampleScopedCounter()
          + incrementAllCounters()
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.annotation {
      class ImplementationStatusFixture {
      }
    }
  }
  

  BeforeAndAfterLoggingWithListenerFixture o-- ExampleEventTestExtension : ext1
  BeforeAndAfterLoggingWithListenerFixture o-- ExampleEventTestExtension : ext2
  ConcordionResourcesFixture o-- TestRig : testRig
  ConcordionResourcesFixture o-- JavaSourceCompiler : compiler
  ConcordionResourcesFixture o-- ProcessingResult : result


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
