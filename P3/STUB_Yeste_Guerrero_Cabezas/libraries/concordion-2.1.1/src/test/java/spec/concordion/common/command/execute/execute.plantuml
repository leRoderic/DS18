@startuml

title __EXECUTE's Class Diagram__\n

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class AccessToLinkHrefTest {
            + fragmentSucceeds()
            + myMethod()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class ContinueAfterExceptionsFixture {
            - myMethodWasCalled : boolean
            + myMethodWasCalledProcessing()
            + myExceptionThrower()
            + myMethod()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class ExecuteTest {
            - myMethodWasCalled : boolean
            - argument : String
            + myMethodWasCalledProcessing()
            + getArgument()
            + myMethod()
            + myMethod()
            + myMethod()
            + myMethod()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class ExecutingListTest {
            - treeEntries : List<MultiValueResult>
            + parseNode()
            + getNodes()
            + process()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class ExecutingTablesTest {
            + process()
            + generateUsername()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class Result {
            + successCount : long
            + failureCount : long
            + exceptionCount : long
            + lastExpectedValue : String
            + lastActualValue : Object
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class FailFastFixture {
            - myMethodWasCalled : boolean
            + myMethodWasCalledProcessing()
            + myExceptionThrower()
            + myMethod()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class FailFastOnSpecificExceptionsFixture {
            - myMethodWasCalled : boolean
            + myMethodWasCalledProcessing()
            + myTimeoutExceptionThrower()
            + myFileNotFoundExceptionThrower()
            + myMethod()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.execute {
        class FailFastPassthroughFixture {
        }
      }
    }
  }
  

  ExecutingTablesTest +-down- Result
  FailFastPassthroughFixture -up-|> RunTotalsFixture


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
