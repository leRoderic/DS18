@startuml

title __EXAMPLE's Class Diagram__\n

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class ExampleFixture {
            - counter : int
            - numberRowsInserted : int
            + setCounter()
            + getCounter()
            + incrementCounter()
            + isTrue()
            + isNull()
            + runTestDummySpec()
            + numberTableRowsInserted()
            + addTableRow()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class FailFastExampleFixture {
            - counter : int
            + getCounter()
            + throwException()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class FixtureWithExampleHookMethodsFixture {
            {static} - staticBeforeExampleCounter : AtomicInteger
            {static} - staticAfterExampleCounter : AtomicInteger
            - beforeEachExample()
            - afterEachExample()
            + getBeforeExampleCounter()
            + getAfterExampleCounter()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class FixtureWithExampleInitialisationFixture {
            {static} - staticFieldCounter : AtomicInteger
            - counter : int
            - incrementOnEachCall()
            + getFieldInitialisationCounter()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class FixtureWithExampleWithoutOuterExampleHookMethodsFixture {
            {static} - staticBeforeExampleCounter : AtomicInteger
            {static} - staticAfterExampleCounter : AtomicInteger
            - beforeEachExample()
            - afterEachExample()
            + getBeforeExampleCounter()
            + getAfterExampleCounter()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class FixtureWithExampleWithoutOuterExampleInitialisationFixture {
            {static} - staticFieldCounter : AtomicInteger
            - counter : int
            - incrementOnEachCall()
            + getFieldInitialisationCounter()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class FixtureWithoutExampleHookMethodsFixture {
            {static} - staticBeforeExampleCounter : AtomicInteger
            {static} - staticAfterExampleCounter : AtomicInteger
            - beforeEachExample()
            - afterEachExample()
            + getBeforeExampleCounter()
            + getAfterExampleCounter()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class FixtureWithoutExampleInitialisationFixture {
            {static} - staticFieldCounter : AtomicInteger
            - counter : int
            + FixtureWithoutExampleInitialisationFixture()
            + getFieldInitialisationCounter()
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class SpecCallingFailFastExampleFixture {
        }
      }
    }
  }
  

  package spec.concordion {
    package spec.concordion.common.command {
      package spec.concordion.common.command.example {
        class SpecWithBeforeSpec {
            # beforeSpecCounter : ScopedObjectHolder<AtomicInteger>
            + beforeSpec()
            + beforeSpecRunOnce()
        }
      }
    }
  }
  

  ExampleFixture -up-|> SpecWithBeforeSpec
  SpecCallingFailFastExampleFixture -up-|> RunTotalsFixture


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
