@startuml

title __RUNTOTALS's Class Diagram__\n

  package spec.concordion.common.results.runTotals {
    class Annotations {
        {static} - beforeClassCalled : boolean
        - beforeCalled : boolean
        - ruleMethodInvoked : boolean
        - ruleFieldInvoked : boolean
        + rule : TestRule
        + before()
        {static} + beforeClass()
        + ruleMethod()
        + wasBeforeCalled()
        + wasBeforeClassCalled()
        + wasRuleMethodInvoked()
        + wasRuleFieldInvoked()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class ExpectedToFailTest {
        + getSuccessString()
        + throwException()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class ExpectedToFailWithExampleFixture {
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class IgnoredTest {
        + getSuccessString()
        + throwException()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class InvalidHTMLTest {
        + runTotalsExtension : RunTotalsExtension
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class JUnit3RunTotalsTest {
        + getSuccessString()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class JUnit4RunTotalsTest {
        + getSuccessString()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class MixedSuccessesAndFailures {
        + getSuccessString()
        + throwException()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class RuleWithCallback {
        - callback : Statement
        + RuleWithCallback()
        + apply()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class CompoundStatement {
        ~ statement1 : Statement
        ~ statement2 : Statement
        + CompoundStatement()
        + evaluate()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class RunSomeOthers {
        + runTotalsExtension : RunTotalsExtension
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class RunTotalsExtension {
        + addTo()
        + throwableCaught()
        + runStarted()
        + successReported()
        + failureReported()
        + ignoredReported()
        - writeText()
        - writeText()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class UnimplementedTest {
        + getSuccessString()
        + throwException()
    }
  }
  

  package spec.concordion.common.results.runTotals {
    class UnimplementedWithAssertTest {
        + getSuccessString()
        + throwException()
        + doTest()
    }
  }
  

  RuleWithCallback -up-|> TestRule
  RuleWithCallback +-down- CompoundStatement
  RunTotalsExtension -up-|> ConcordionExtension
  RunTotalsExtension -up-|> RunListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
