@startuml

title __STRATEGIES's Class Diagram__\n

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.command {
        package org.concordion.internal.command.strategies {
          abstract class AbstractChangingOrderRowsMatchStrategy {
              + AbstractChangingOrderRowsMatchStrategy()
              + verify()
              {abstract} # findMatchingRow()
              - reportSurplusRows()
          }
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.command {
        package org.concordion.internal.command.strategies {
          class BestMatchStrategy {
              + BestMatchStrategy()
              # findMatchingRow()
          }
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.command {
        package org.concordion.internal.command.strategies {
          class DefaultMatchStrategy {
              {static} + DEFAULT_STRATEGY_NAME : String
              + DefaultMatchStrategy()
              + verify()
          }
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.command {
        package org.concordion.internal.command.strategies {
          class KeyMatchStrategy {
              + KeyMatchStrategy()
              # findMatchingRow()
          }
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.command {
        package org.concordion.internal.command.strategies {
          abstract class RowsMatchStrategy {
              # commandCall : CommandCall
              # evaluator : Evaluator
              # resultRecorder : ResultRecorder
              # listeners : List<VerifyRowsListener>
              # loopVariableName : String
              # tableSupport : TableSupport
              # expectedRows : Row[]
              # actualRows : List<Object>
              + RowsMatchStrategy()
              {abstract} + verify()
              # announceExpressionEvaluated()
              # announceMissingRow()
              # announceSurplusRow()
              # copy()
          }
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
