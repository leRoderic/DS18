@startuml

title __RUNNER's Class Diagram__\n

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class CachedResultsUnitTest {
            {static} + EXAMPLE_1_NAME : String
            {static} + EXAMPLE_2_NAME : String
            - runResults : RunResultsCache
            + before()
            + testCacheInProgress()
            + testCacheInProgressWithExample()
            + testNotFoundInCache()
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class JustAnotherClass {
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class DefaultConcordionRunnerTest {
            + systemErrRule : SystemErrRule
            + returnsFailureOnJUnitFailure()
            + returnsSuccessOnJUnitSuccess()
            + returnsIgnoredOnJUnitSuccessWhenExpectedToFail()
            + returnsIgnoredOnJUnitSuccessWhenUnimplemented()
            + throwsAssertionErrorOnJUnitFailureWhenExpectedToFail()
            + throwsAssertionErrorOnJUnitFailureWhenUnimplemented()
            + doesNotThrowExceptionOnAssertionErrorWhenExpectedToPass()
            + throwsExceptionOnCheckedException()
            + throwsWrappedExceptionOnThrowable()
            + throwsRuntimeExceptionOnRuntimeException()
            + returnsIgnoredOnJUnitSuccessWhenIgnoredCountGreaterThanZero()
            + logsExceptions()
            + doesNotLogAssertionErrors()
            + doesNotLogAssertionErrorsWhenExpectedToFailEither()
            + doesNotLogAssertionErrorsWhenUnimplementedEither()
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class UnannotatedClass {
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class ExpectedToFailClass {
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class UnimplementedClass {
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class TestDefaultConcordionRunner {
            # decodeJUnitResult()
        }
      }
    }
  }
  

  package org.concordion {
    package org.concordion.internal {
      package org.concordion.internal.runner {
        class StubResult {
            {static} - serialVersionUID : long
            {static} + SUCCESS : StubResult
            {static} + FAILURE : StubResult
            - failures : List<Failure>
            - ignoreCount : int
            + withFailure()
            + withIgnoreCount()
            + wasSuccessful()
            + getFailures()
            + getIgnoreCount()
        }
      }
    }
  }
  

  CachedResultsUnitTest +-down- JustAnotherClass
  DefaultConcordionRunnerTest o-- TestDefaultConcordionRunner : runner
  DefaultConcordionRunnerTest +-down- UnannotatedClass
  DefaultConcordionRunnerTest +-down- ExpectedToFailClass
  DefaultConcordionRunnerTest +-down- UnimplementedClass
  DefaultConcordionRunnerTest +-down- TestDefaultConcordionRunner


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
